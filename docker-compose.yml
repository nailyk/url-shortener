services:
  server:
    container_name: server
    build:
      context: .
      dockerfile: ./server/Dockerfile
    ports:
      - "3000:3000"
    env_file:
      - ./server/.env
    depends_on:
      - postgres
      - redis
    healthcheck:
      test: ["CMD", "sh", "-c", "nc -z localhost 3000 || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 10

  client:
    container_name: client
    build:
      context: ./client
    ports:
      - "8080:80"
    env_file:
      - ./client/.env
    depends_on:
      - server
    healthcheck:
      test: ["CMD", "sh", "-c", "nc -z localhost 80 || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 10

  redis:
    container_name: redis
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  postgres:
    container_name: postgres
    image: postgres:17-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: url_shortener
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./server/src/config/db-init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10

volumes:
  redis-data:
  postgres-data:
